# coding: utf-8

from inspect import getsource
from datetime import datetime

from OpenSSL.crypto import FILETYPE_PEM, TYPE_RSA, X509, PKey, dump_privatekey, dump_certificate

key = PKey()
key.generate_key(TYPE_RSA, 2048)

cert = X509()
issuer = cert.get_issuer()
subject = cert.get_subject()

for dn in [issuer, subject]:
    dn.C = b"TR"
    dn.ST = "Çorum".encode("utf-8")
    dn.L = "Başmakçı".encode("utf-8")
    dn.CN = b"localhost"
    dn.O = b"Twisted Matrix Labs"
    dn.OU = b"Automated Testing Authority"
    dn.emailAddress = b"security@twistedmatrix.com"

cert.set_serial_number(datetime.now().toordinal())
cert.gmtime_adj_notBefore(0)
cert.gmtime_adj_notAfter(60 * 60 * 24 * 365 * 100)

cert.set_pubkey(key)
cert.sign(key, "sha256")

import __main__
source = getsource(__main__)
source = source.split("\n" + "-" * 5)[0].rsplit("\n", 1)[0]
with open("server.pem", "w") as fObj:
    fObj.write(source)
    fObj.write("\n")
    fObj.write("'''\n")
    fObj.write(dump_privatekey(FILETYPE_PEM, key).decode("ascii"))
    fObj.write(dump_certificate(FILETYPE_PEM, cert).decode("ascii"))
    fObj.write("'''\n")
with open(b"key.pem.no_trailing_newline", "w") as fObj:
    fObj.write(dump_privatekey(FILETYPE_PEM, key).decode("ascii").rstrip('\n'))
with open(b"cert.pem.no_trailing_newline", "w") as fObj:
    fObj.write(dump_certificate(FILETYPE_PEM, cert).decode("ascii").rstrip('\n'))
'''
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCaHd4t+q5baPa3
Kxwz4A3eVygogPuguCOCReg2OegvvQIvyFg3Ij8xG+hRzzJSc132M+V7nTKkf8Xl
Otr98xrqhVSNFMg74P6YDz5ezFuZ0dGHCvmV2u6YHbwKUwcucW/bCFkY8WWZi62h
5sjiVlDmQ0N3ruTwefkCEetFeBKjb2qgOZ729wnM3EJYgMPr61R1gRI47KH0jJk9
rKNa58c63weRyL1EocY0srUJi7gf+WJ/tuu0o835itC2OwoGHj3TlW8JYilOmUCF
WqD02P7rIdkQAlNFzuzfFCMrq0JWMQTSPdIyWZbl//j4i0MPPFk7ER0uXlbR+2aY
QRPZdUgxAgMBAAECggEAATaKuvUyMeT6izFNPVnYUJ5l1ikJ0M8eYWUhYDbHhlQm
YvNb3bq14VgMEN2+Z9AoyEIDXpdyD9ANwylG8TwVZKS0qqgFUmDj7ERsTPd6Y/NO
wKkz6EnSJh2SBagm4uIwFPiKHnlkKkl7FS1mg3nHxEnYOtDnwVE2+jvG5FywzH7d
TLFTmi6Zw9J3+QL0YrwtEezec4bnn7c8v4EjfDWtjR5VQdy7s7WUY/FbJgJX5rMf
VFQspUKV70vf4ulGLbcvKl9mZE/pBL/ClFAiGr1igZi1oTh+heDlZ5ESZCTw6XkU
6gtAOm0ages0+VHLiFx2cwdX96biMKgGejSv0k4UDQKBgQDHcdYujqGPW24Y53ux
1TY1p/0SrxFZGTvBgBws5Z9Ou7Xyh0tSdwniQkwLvW/7FmEzyS9/5Fi/laRYNUSV
jCgrg5w9Q7gfwGrzDwqulGcYxDTLVuksZ6vv8AJtZOLuQit+JzfiZGn5onhzF5bG
nJXNaguGKBNDmjtqkFpAg/udhQKBgQDF0ZBNWNEFpTK6oViiP/gEQvJ8P0eo4Z2e
MexxuhaBwq3f4kquuZDWg2llZb5+Cig8JVbGoeQ9XE6nKwXXRcJxwxTXPl8DhDWA
Qw7qefQLbY1NdvoYrmySb9m/k4wXH/xh7o8Ld3TIRJExoKCdjBifahn7BGHTcLut
RAVqZhAZvQKBgQCRZMte5VuhxmVcgmQKIASE2RIErNtYuKx3Q41GrZ6VJwJc64Rd
eaoa53nIlTEtOgNiXSfjc/O+trg4FZ0J6ELgdfFQOC3h98P/rNd8rXL6+w4BrjoN
xQXyxGUAmqtURaivLqfuwoT/FxH31Rp1b3FFbik4g76Hacgmx1UD8zNagQKBgHhc
3nRxihzpO0ibS5bNXVcadPhseGmlfYX30moQVAl4Ltt+kPpnJl2fb82mbpW6EGko
Pvh1IK7FL4Y/gzpM09bsYA3ngWBeXT9Bjh3VPkyFx+hOcDX8S0t+ivsqB586cxIT
WS4c7Q29yqprlc7Go2S75jr5m5xPh6IRNUpb94fxAoGABdRMIEGJw99BmBCws5Pa
lfTGINbmbjP00iOcfIifd5RwyYi+dLNHafWB3qiHbJhSBvvxmFzqtiXUlvnZgmyY
sAZqUKwMfMx0nNt9gsgIDno+RMrvyoInL7lAJrqoyGlsXlpPy3P5Yapw/yLElx3h
WdITgeXFRqEo2QDLNIjNhEg=
-----END PRIVATE KEY-----
-----BEGIN CERTIFICATE-----
MIID6DCCAtACAwtD7TANBgkqhkiG9w0BAQsFADCBtzELMAkGA1UEBhMCVFIxDzAN
BgNVBAgMBsOHb3J1bTEUMBIGA1UEBwwLQmHFn21ha8OnxLExEjAQBgNVBAMMCWxv
Y2FsaG9zdDEcMBoGA1UECgwTVHdpc3RlZCBNYXRyaXggTGFiczEkMCIGA1UECwwb
QXV0b21hdGVkIFRlc3RpbmcgQXV0aG9yaXR5MSkwJwYJKoZIhvcNAQkBFhpzZWN1
cml0eUB0d2lzdGVkbWF0cml4LmNvbTAgFw0yMjA1MTEwMDQwMjZaGA8yMTIyMDQx
NzAwNDAyNlowgbcxCzAJBgNVBAYTAlRSMQ8wDQYDVQQIDAbDh29ydW0xFDASBgNV
BAcMC0JhxZ9tYWvDp8SxMRIwEAYDVQQDDAlsb2NhbGhvc3QxHDAaBgNVBAoME1R3
aXN0ZWQgTWF0cml4IExhYnMxJDAiBgNVBAsMG0F1dG9tYXRlZCBUZXN0aW5nIEF1
dGhvcml0eTEpMCcGCSqGSIb3DQEJARYac2VjdXJpdHlAdHdpc3RlZG1hdHJpeC5j
b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCaHd4t+q5baPa3Kxwz
4A3eVygogPuguCOCReg2OegvvQIvyFg3Ij8xG+hRzzJSc132M+V7nTKkf8XlOtr9
8xrqhVSNFMg74P6YDz5ezFuZ0dGHCvmV2u6YHbwKUwcucW/bCFkY8WWZi62h5sji
VlDmQ0N3ruTwefkCEetFeBKjb2qgOZ729wnM3EJYgMPr61R1gRI47KH0jJk9rKNa
58c63weRyL1EocY0srUJi7gf+WJ/tuu0o835itC2OwoGHj3TlW8JYilOmUCFWqD0
2P7rIdkQAlNFzuzfFCMrq0JWMQTSPdIyWZbl//j4i0MPPFk7ER0uXlbR+2aYQRPZ
dUgxAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGynLgzRBba3NByjm+yGNykLGZqq
L5ftvpC02F3r02XWqDDteIz3F3dHKWq0JxLbRR8euxqfcb6YwFvjwFtB7QBHSZgN
iNcdpDSph2aiHsrPx0XvEF83nd9OSrtMuBqlgIoMoKGo5QCPEUQdl+8OnaKb7f55
oyFeKs2gY2di08i5EfJA7D+v+svAC9GUM2GAZOtxBgJOIk57xhxGKUlRxQZnu3S+
OWJTXUwuEhb/3G+g6qyb9SmN04nlMYeVU2gn7YdNbXZf2rh0JfnKaHsHNtyYs7zV
YylJ0o3EoqKZcxz4od8xwwg622DuxRBFqzAOuG/go316LgbEu9qVPwk4mwM=
-----END CERTIFICATE-----
'''

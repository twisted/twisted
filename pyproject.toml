[build-system]
requires = [
    "hatchling >= 1.10.0",
    "hatch-fancy-pypi-readme >= 22.5.0",
    "incremental >= 22.10.0",
]
build-backend = "hatchling.build"

[project]
name = "Twisted"
dynamic = [
    "version",
    "readme",
    # Remove this when the legacy optional dependency names are removed
    "optional-dependencies",
]
description = "An asynchronous networking framework written in Python"
license = "MIT"
# When updating this value, make sure our CI matrix includes a matching minimum version.
requires-python = ">=3.7.1"
authors = [
    { name = "Twisted Matrix Laboratories", email = "twisted-python@twistedmatrix.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "zope.interface >= 5",
    "constantly >= 15.1",
    "incremental >= 22.10.0",
    "Automat >= 0.8.0",
    "hyperlink >= 17.1.1",
    "attrs >= 21.3.0",
    "typing_extensions >= 3.10.0",
    "twisted-iocpsupport >= 1.0.2, <2; platform_system == 'Windows'",
]

# Switch to this when the legacy optional dependency names are removed
# [project.optional-dependencies]
[tool.hatch.metadata.hooks.custom.optional-dependencies]
# This is list of minimum dependencies required to run the tests.
# The plan is to remove the `test` extra requirement and skip tests that
# depend on them
# To prevent trunk failures we should pin all dev dependencies to minor
# versions.
# We trust semantic versioning and auto-upgrading to a bugfix release
# should be OK.
test = [
    "cython-test-exception-raiser >= 1.0.2, <2",
    "PyHamcrest >= 2",
    "hypothesis >= 6.56",
]

# List of dependencies required to build the documentation and test the
# release scripts and process.
dev-release = [
    "towncrier ~= 22.8",
    "pydoctor ~= 22.9.0",
    "sphinx-rtd-theme ~= 0.5",
    "readthedocs-sphinx-ext ~= 2.1",
    "sphinx >= 4.1.2, <6",
]

# All the extra tools used to help with the development process.
dev = [
    "twisted[dev-release]",
    "pyflakes ~= 2.2",
    # TODO: support python-subunit in py3.10 https://twistedmatrix.com/trac/ticket/10115
    "python-subunit ~= 1.4; python_version < '3.10'",
    "twistedchecker ~= 0.7",
    "coverage >= 6b1, <7",
]

tls = [
    "pyopenssl >= 21.0.0",
    # service_identity 18.1.0 added support for validating IP addresses in
    # certificate subjectAltNames
    "service_identity >= 18.1.0",
    "idna >= 2.4",
]

conch = [
    "pyasn1 >= 0.4",
    "cryptography >= 3.3",
    "appdirs >= 1.4.0",
    "bcrypt >= 3.1.3",
]

conch-nacl = [
    "twisted[conch]",
    # Used to support Ed25519 keys on systems with OpenSSL < 1.1.1b
    "PyNaCl",
]

serial = [
    "pyserial >= 3.0",
    "pywin32 != 226; platform_system == 'Windows'",
]

http2 = [
    "h2 >= 3.0, < 5.0",
    "priority >= 1.1.0, < 2.0",
]

contextvars = [
    "contextvars >= 2.4, < 3; python_version < '3.7'",
]

all-non-platform = [
    "twisted[test,tls,conch,serial,http2,contextvars]",
]

macos-platform = [
    "twisted[all-non-platform]",
    "pyobjc-core",
    "pyobjc-framework-CFNetwork",
    "pyobjc-framework-Cocoa",
]

windows-platform = [
    "twisted[all-non-platform]",
    "pywin32 != 226",
]

osx-platform = [
    "twisted[macos-platform]",
]

gtk-platform = [
    "twisted[all-non-platform]",
    "pygobject",
]

mypy = [
    "twisted[dev,all-non-platform,conch-nacl]",
    "mypy==0.930",
    "mypy-zope==0.3.4",
    "types-setuptools",
    "types-pyOpenSSL",
]

[project.scripts]
cftp = "twisted.conch.scripts.cftp:run"
ckeygen = "twisted.conch.scripts.ckeygen:run"
conch = "twisted.conch.scripts.conch:run"
mailmail = "twisted.mail.scripts.mailmail:run"
pyhtmlizer = "twisted.scripts.htmlizer:run"
tkconch = "twisted.conch.scripts.tkconch:run"
trial = "twisted.scripts.trial:run"
twist = "twisted.application.twist._twist:Twist.main"
twistd = "twisted.scripts.twistd:run"

[project.urls]
Changelog = "https://github.com/twisted/twisted/blob/HEAD/NEWS.rst"
Documentation = "https://docs.twistedmatrix.com/"
Homepage = "https://twistedmatrix.com/"
Issues = "https://twistedmatrix.com/trac/report"
Source = "https://github.com/twisted/twisted"
Twitter = "https://twitter.com/twistedmatrix"

[tool.hatch.metadata]
# This is here to enable backward compatible extra dependencies
# that are defined using underscores.
allow-ambiguous-features = true

[tool.hatch.version]
source = "code"
path = "src/twisted/__init__.py"
search-paths = ["src"]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/x-rst"
fragments = [
    { path = "README.rst" },
]

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
# Munge links of the form `NEWS <NEWS.rst>`_ to point at the appropriate
# location on GitHub so that they function when the long description is
# displayed on PyPI.
pattern = '`([^`]+)\s+<(?!https?://)([^>]+)>`_'
replacement = '`\1 <https://github.com/twisted/twisted/blob/trunk/\2>`_'
ignore-case = true

[tool.hatch.build.targets.wheel]
packages = [
    "src/twisted",
]
exclude = [
    "*.pxi",
    "*.pyx",
    "build.bat",
]

[tool.hatch.build.targets.sdist]
# This dictates what goes into a sdist tarball.
# As a release tarball, we want to include:
#  - All of the library code.
#  - All the useful documentation (but not the super historic stuff)
#  - All of the test files, so that the tests can be run on an installed copy.
# We do not want to include:
#  - Release management files (e.g. topfiles)
#  - Things only useful when running from a source checkout
include = [
    # Documentation
    "/docs",

    # Library code
    "/src",
    "/CONTRIBUTING.md",
    "/INSTALL.rst",
    "/NEWS.rst",
    "/README.rst",
    "/code_of_conduct.md",

    # Test-running utilities for downstream packagers
    "/.coveragerc",
    "/mypy.ini",
    "/tox.ini",
]

[tool.towncrier]
    package = "twisted"
    package_dir = "src"
    filename = "NEWS.rst"

    [[tool.towncrier.section]]
        path = ""

    [[tool.towncrier.section]]
        path = "conch"
        name = "Conch"

    [[tool.towncrier.section]]
        path = "web"
        name = "Web"

    [[tool.towncrier.section]]
        path = "mail"
        name = "Mail"

    [[tool.towncrier.section]]
        path = "words"
        name = "Words"

    [[tool.towncrier.section]]
        path = "names"
        name = "Names"

    [[tool.towncrier.section]]
        path = "trial"
        name = "Trial"

    [[tool.towncrier.type]]
        directory = "feature"
        name = "Features"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "bugfix"
        name = "Bugfixes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "doc"
        name = "Improved Documentation"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "removal"
        name = "Deprecations and Removals"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "misc"
        name = "Misc"
        showcontent = false

[tool.black]
target-version = ['py36', 'py37', 'py38']

[tool.isort]
profile = "black"
sections = "FUTURE,STDLIB,ZOPE,OPENSSL,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
default_section = "THIRDPARTY"
no_lines_before = "LOCALFOLDER"
known_first_party = "twisted"
known_zope = "zope"
known_openssl = "OpenSSL"
combine_as_imports = true
skip = "src/twisted/logger/__init__.py,src/twisted/internet/reactor.py"

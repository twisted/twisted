#
# This is just a template, and not a main pipeline definition.
#
parameters:

- name: platform
  type: string
  values:
  - macos
  - windows

- name: pythonVersion
  type: string
  values:
  - '3.7'
  - '3.8'
  - '3.9'
  - '3.10'

- name: windowsReactor
  type: string
  default: select
  values:
  - select
  - iocp

- name: allowFailure
  type: boolean
  default: false

steps:
- checkout: self
  clean: true
  # A minimum depth of 2 is required, as the HEAD is the auto-merge commit
  # and we need the last commit from the PR to report the coverage.
  fetchDepth: 2

- task: UsePythonVersion@0
  displayName: "Use Python ${{ parameters.pythonVersion }}"
  inputs:
    versionSpec: "${{ parameters.pythonVersion }}"

- script: |
   python --version
   python -c "import sys; print(sys.prefix)"
   python -c "import sys; print(sys.exec_prefix)"
   python -c "import sys; print(sys.executable)"
   python -c "import struct; print(struct.calcsize('P') * 8)"
   python -c "print('\nENVIRONMENT VARIABLES\n=====================\n\n')"
   python -c "import os; [ print(e,v) for (e,v) in os.environ.items() ]"
  displayName: 'Get Python Information'

- script: 'python -m pip install -U pip setuptools tox coverage coveralls'
  displayName: 'Update pip & install tox'

- ${{ if eq(parameters.platform, 'macos') }}:
  - script: 'python -m tox -e alldeps-withcov-posix'
    displayName: 'Run tests'
    continueOnError: ${{ parameters.allowFailure }}
    env:
      TRIAL_ARGS: "-j 4"

- ${{ if eq(parameters.platform, 'windows') }}:
  - script: 'python -m tox -e alldeps-withcov-windows'
    displayName: 'Run tests'
    continueOnError: ${{ parameters.allowFailure }}
    env:
      TWISTED_REACTOR: ${{ parameters.windowsReactor }}

- bash: |
    # sub-process coverage are generated in separate files so we combine them
    # to get an unified coverage for the local run.
    # The XML is generate to be used with 3rd party tools like diff-cover.
    python -m coverage combine
    python -m coverage xml -o coverage.xml -i
    python -m coverage report

  displayName: 'Prepare coverage'
  condition: always()
  continueOnError: true

- bash: |
    bash <(curl -s https://codecov.io/bash) -X search -X gcov -f coverage.xml -n "${{ parameters.platform }}-${{ parameters.pythonVersion }}"
  displayName: 'Report to Codecov'
  condition: always()
  continueOnError: true
